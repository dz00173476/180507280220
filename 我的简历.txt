  第一次学习Git是完全按照刘雷老师的教程学习的,学的过程中基本上没有遇到什么问题,但是自己实际操作就问题不断了.
  git:msysgit是Windows版的Git，从http://msysgit.github.io/下载，然后按默认选项安装即可。
安装完成后，在开始菜单里找到“Git”->“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！
安装完成后，还需要最后一步设置，在命令行输入
  添加文件(此处可将整个文件添加 使用git add filename 后面也可以空格之后再加其他的文件...
  add所有文件$ git add .
  add并rm所有$ git add -A
  提交modify和rm（新加的文件不会自动提交）$ git commit -a
  查看你刚才操作的状态$ git status
  查看修改内容$ git diff readme.txt 
  查看log，后面参数可选(数字)$ git log (--prety=oneline)
  回退上个版本（HEAD指向master的指针，^个数表示上几个版本）$ git reset --hard HEAD^
  回退n个版本$ git reset --hard HEAD~100 
  回退到commit为3628164版本$ git reset --hard 3628164`
  查看每一次命令$ git reflog　
  把readme.txt文件在工作区的修改全部撤销$ git checkout --readme.txt 
  命令中的“--”很重要，没有“--”，就变成了“创建一个新分支”的命令$ git checkout -- file
  可以把暂存区的修改撤销掉（unstage），重新放回工作区$ git reset HEAD readme.txt
  从版本库中删除文件$ git rm readme.txt
  如果在文件管理器中误删了文件，因为版本库里还有呢，可以用这句恢复$ git checkout -- readme.txt
  查看分支：$ git branch
  创建分支：$ git branch name
  切换分支：$ git checkout name
  创建+切换分支：$ git checkout -b name
  合并某分支到当前分支：$ git merge name-no-ff参数，表示禁用“Fast forward” 会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。
  解决分支合并产生的冲突：手动修改冲突后提交就行
  命令可以看到分支合并图$ git log --graph
  当你接到一个修复一个代号101的bug的任务时，很自然地，你想创建一个分支issue -101来修复它，但是，等等，当前正在dev上进行的工作还没有提交stash功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：git stash（有修改还没add并commit的时候调用后，现场保留，分支清空）
命令查看工作现场$ git stash list
  恢复有两个办法：
一是用$ git stash apply恢复，但是恢复后，stash内容并不删除，你需要用$ git stash drop来删除；
另一种方式是用$ git stash pop,恢复的同时把stash内容也删了
  查看远程库的信息$ git remote
  显示更详细的信息$ git remote -v
  抓取与推送
  
